'------------------------------------------------------------------------------
' <auto-generated>
'     Il codice è stato generato da uno strumento.
'     Versione runtime:2.0.50727.8922
'
'     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
'     il codice viene rigenerato.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DsMailDaInviare"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DsMailDaInviare
    Inherits Global.System.Data.DataSet
    
    Private tableEmailInviateT As EmailInviateTDataTable
    
    Private tableEmailInviateDett As EmailInviateDettDataTable
    
    Private tableArticoliInstallati As ArticoliInstallatiDataTable
    
    Private relationEmailInviateT_EmailInviateDett As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("EmailInviateT")) Is Nothing) Then
                MyBase.Tables.Add(New EmailInviateTDataTable(ds.Tables("EmailInviateT")))
            End If
            If (Not (ds.Tables("EmailInviateDett")) Is Nothing) Then
                MyBase.Tables.Add(New EmailInviateDettDataTable(ds.Tables("EmailInviateDett")))
            End If
            If (Not (ds.Tables("ArticoliInstallati")) Is Nothing) Then
                MyBase.Tables.Add(New ArticoliInstallatiDataTable(ds.Tables("ArticoliInstallati")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property EmailInviateT() As EmailInviateTDataTable
        Get
            Return Me.tableEmailInviateT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property EmailInviateDett() As EmailInviateDettDataTable
        Get
            Return Me.tableEmailInviateDett
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ArticoliInstallati() As ArticoliInstallatiDataTable
        Get
            Return Me.tableArticoliInstallati
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DsMailDaInviare = CType(MyBase.Clone,DsMailDaInviare)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("EmailInviateT")) Is Nothing) Then
                MyBase.Tables.Add(New EmailInviateTDataTable(ds.Tables("EmailInviateT")))
            End If
            If (Not (ds.Tables("EmailInviateDett")) Is Nothing) Then
                MyBase.Tables.Add(New EmailInviateDettDataTable(ds.Tables("EmailInviateDett")))
            End If
            If (Not (ds.Tables("ArticoliInstallati")) Is Nothing) Then
                MyBase.Tables.Add(New ArticoliInstallatiDataTable(ds.Tables("ArticoliInstallati")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableEmailInviateT = CType(MyBase.Tables("EmailInviateT"),EmailInviateTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableEmailInviateT) Is Nothing) Then
                Me.tableEmailInviateT.InitVars
            End If
        End If
        Me.tableEmailInviateDett = CType(MyBase.Tables("EmailInviateDett"),EmailInviateDettDataTable)
        If (initTable = true) Then
            If (Not (Me.tableEmailInviateDett) Is Nothing) Then
                Me.tableEmailInviateDett.InitVars
            End If
        End If
        Me.tableArticoliInstallati = CType(MyBase.Tables("ArticoliInstallati"),ArticoliInstallatiDataTable)
        If (initTable = true) Then
            If (Not (Me.tableArticoliInstallati) Is Nothing) Then
                Me.tableArticoliInstallati.InitVars
            End If
        End If
        Me.relationEmailInviateT_EmailInviateDett = Me.Relations("EmailInviateT_EmailInviateDett")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DsMailDaInviare"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DsMailDaInviare.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableEmailInviateT = New EmailInviateTDataTable
        MyBase.Tables.Add(Me.tableEmailInviateT)
        Me.tableEmailInviateDett = New EmailInviateDettDataTable
        MyBase.Tables.Add(Me.tableEmailInviateDett)
        Me.tableArticoliInstallati = New ArticoliInstallatiDataTable
        MyBase.Tables.Add(Me.tableArticoliInstallati)
        Me.relationEmailInviateT_EmailInviateDett = New Global.System.Data.DataRelation("EmailInviateT_EmailInviateDett", New Global.System.Data.DataColumn() {Me.tableEmailInviateT.IdColumn}, New Global.System.Data.DataColumn() {Me.tableEmailInviateDett.IdEmailInviateTColumn}, false)
        Me.Relations.Add(Me.relationEmailInviateT_EmailInviateDett)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeEmailInviateT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeEmailInviateDett() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeArticoliInstallati() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DsMailDaInviare = New DsMailDaInviare
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub EmailInviateTRowChangeEventHandler(ByVal sender As Object, ByVal e As EmailInviateTRowChangeEvent)
    
    Public Delegate Sub EmailInviateDettRowChangeEventHandler(ByVal sender As Object, ByVal e As EmailInviateDettRowChangeEvent)
    
    Public Delegate Sub ArticoliInstallatiRowChangeEventHandler(ByVal sender As Object, ByVal e As ArticoliInstallatiRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class EmailInviateTDataTable
        Inherits Global.System.Data.TypedTableBase(Of EmailInviateTRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnNumero As Global.System.Data.DataColumn
        
        Private columnAnno As Global.System.Data.DataColumn
        
        Private columnStato As Global.System.Data.DataColumn
        
        Private columnDataInvio As Global.System.Data.DataColumn
        
        Private columnEmail As Global.System.Data.DataColumn
        
        Private columnNote As Global.System.Data.DataColumn
        
        Private columnIdModulo1 As Global.System.Data.DataColumn
        
        Private columnIdModulo2 As Global.System.Data.DataColumn
        
        Private columnIdModulo3 As Global.System.Data.DataColumn
        
        Private columnIdModulo4 As Global.System.Data.DataColumn
        
        Private columnMittente As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "EmailInviateT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NumeroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumero
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AnnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DataInvioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataInvio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EmailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IdModulo1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdModulo1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IdModulo2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdModulo2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IdModulo3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdModulo3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IdModulo4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdModulo4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MittenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMittente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As EmailInviateTRow
            Get
                Return CType(Me.Rows(index),EmailInviateTRow)
            End Get
        End Property
        
        Public Event EmailInviateTRowChanging As EmailInviateTRowChangeEventHandler
        
        Public Event EmailInviateTRowChanged As EmailInviateTRowChangeEventHandler
        
        Public Event EmailInviateTRowDeleting As EmailInviateTRowChangeEventHandler
        
        Public Event EmailInviateTRowDeleted As EmailInviateTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddEmailInviateTRow(ByVal row As EmailInviateTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddEmailInviateTRow(ByVal Numero As Integer, ByVal Anno As Integer, ByVal Stato As Integer, ByVal DataInvio As Date, ByVal Email As String, ByVal Note As String, ByVal IdModulo1 As Integer, ByVal IdModulo2 As Integer, ByVal IdModulo3 As Integer, ByVal IdModulo4 As Integer, ByVal Mittente As String) As EmailInviateTRow
            Dim rowEmailInviateTRow As EmailInviateTRow = CType(Me.NewRow,EmailInviateTRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Numero, Anno, Stato, DataInvio, Email, Note, IdModulo1, IdModulo2, IdModulo3, IdModulo4, Mittente}
            rowEmailInviateTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEmailInviateTRow)
            Return rowEmailInviateTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindById(ByVal Id As Integer) As EmailInviateTRow
            Return CType(Me.Rows.Find(New Object() {Id}),EmailInviateTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As EmailInviateTDataTable = CType(MyBase.Clone,EmailInviateTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New EmailInviateTDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnNumero = MyBase.Columns("Numero")
            Me.columnAnno = MyBase.Columns("Anno")
            Me.columnStato = MyBase.Columns("Stato")
            Me.columnDataInvio = MyBase.Columns("DataInvio")
            Me.columnEmail = MyBase.Columns("Email")
            Me.columnNote = MyBase.Columns("Note")
            Me.columnIdModulo1 = MyBase.Columns("IdModulo1")
            Me.columnIdModulo2 = MyBase.Columns("IdModulo2")
            Me.columnIdModulo3 = MyBase.Columns("IdModulo3")
            Me.columnIdModulo4 = MyBase.Columns("IdModulo4")
            Me.columnMittente = MyBase.Columns("Mittente")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnNumero = New Global.System.Data.DataColumn("Numero", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumero)
            Me.columnAnno = New Global.System.Data.DataColumn("Anno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnno)
            Me.columnStato = New Global.System.Data.DataColumn("Stato", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStato)
            Me.columnDataInvio = New Global.System.Data.DataColumn("DataInvio", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataInvio)
            Me.columnEmail = New Global.System.Data.DataColumn("Email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmail)
            Me.columnNote = New Global.System.Data.DataColumn("Note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNote)
            Me.columnIdModulo1 = New Global.System.Data.DataColumn("IdModulo1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdModulo1)
            Me.columnIdModulo2 = New Global.System.Data.DataColumn("IdModulo2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdModulo2)
            Me.columnIdModulo3 = New Global.System.Data.DataColumn("IdModulo3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdModulo3)
            Me.columnIdModulo4 = New Global.System.Data.DataColumn("IdModulo4", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdModulo4)
            Me.columnMittente = New Global.System.Data.DataColumn("Mittente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMittente)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AutoIncrement = true
            Me.columnId.AutoIncrementSeed = -1
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = false
            Me.columnId.ReadOnly = true
            Me.columnId.Unique = true
            Me.columnEmail.MaxLength = 100
            Me.columnNote.MaxLength = 1073741823
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewEmailInviateTRow() As EmailInviateTRow
            Return CType(Me.NewRow,EmailInviateTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New EmailInviateTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(EmailInviateTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.EmailInviateTRowChangedEvent) Is Nothing) Then
                RaiseEvent EmailInviateTRowChanged(Me, New EmailInviateTRowChangeEvent(CType(e.Row,EmailInviateTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.EmailInviateTRowChangingEvent) Is Nothing) Then
                RaiseEvent EmailInviateTRowChanging(Me, New EmailInviateTRowChangeEvent(CType(e.Row,EmailInviateTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.EmailInviateTRowDeletedEvent) Is Nothing) Then
                RaiseEvent EmailInviateTRowDeleted(Me, New EmailInviateTRowChangeEvent(CType(e.Row,EmailInviateTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.EmailInviateTRowDeletingEvent) Is Nothing) Then
                RaiseEvent EmailInviateTRowDeleting(Me, New EmailInviateTRowChangeEvent(CType(e.Row,EmailInviateTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveEmailInviateTRow(ByVal row As EmailInviateTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DsMailDaInviare = New DsMailDaInviare
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "EmailInviateTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class EmailInviateDettDataTable
        Inherits Global.System.Data.TypedTableBase(Of EmailInviateDettRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnIdEmailInviateT As Global.System.Data.DataColumn
        
        Private columnIdArticoliInst_ContrattiAss As Global.System.Data.DataColumn
        
        Private columnRiga As Global.System.Data.DataColumn
        
        Private columnFlagGa As Global.System.Data.DataColumn
        
        Private columnFlagEl As Global.System.Data.DataColumn
        
        Private columnFlagBa As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "EmailInviateDett"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IdEmailInviateTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdEmailInviateT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IdArticoliInst_ContrattiAssColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdArticoliInst_ContrattiAss
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RigaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRiga
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FlagGaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlagGa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FlagElColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlagEl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FlagBaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlagBa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As EmailInviateDettRow
            Get
                Return CType(Me.Rows(index),EmailInviateDettRow)
            End Get
        End Property
        
        Public Event EmailInviateDettRowChanging As EmailInviateDettRowChangeEventHandler
        
        Public Event EmailInviateDettRowChanged As EmailInviateDettRowChangeEventHandler
        
        Public Event EmailInviateDettRowDeleting As EmailInviateDettRowChangeEventHandler
        
        Public Event EmailInviateDettRowDeleted As EmailInviateDettRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddEmailInviateDettRow(ByVal row As EmailInviateDettRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddEmailInviateDettRow(ByVal parentEmailInviateTRowByEmailInviateT_EmailInviateDett As EmailInviateTRow, ByVal IdArticoliInst_ContrattiAss As Integer, ByVal Riga As Integer, ByVal FlagGa As Boolean, ByVal FlagEl As Boolean, ByVal FlagBa As Boolean) As EmailInviateDettRow
            Dim rowEmailInviateDettRow As EmailInviateDettRow = CType(Me.NewRow,EmailInviateDettRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, IdArticoliInst_ContrattiAss, Riga, FlagGa, FlagEl, FlagBa}
            If (Not (parentEmailInviateTRowByEmailInviateT_EmailInviateDett) Is Nothing) Then
                columnValuesArray(1) = parentEmailInviateTRowByEmailInviateT_EmailInviateDett(0)
            End If
            rowEmailInviateDettRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEmailInviateDettRow)
            Return rowEmailInviateDettRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindById(ByVal Id As Integer) As EmailInviateDettRow
            Return CType(Me.Rows.Find(New Object() {Id}),EmailInviateDettRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As EmailInviateDettDataTable = CType(MyBase.Clone,EmailInviateDettDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New EmailInviateDettDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnIdEmailInviateT = MyBase.Columns("IdEmailInviateT")
            Me.columnIdArticoliInst_ContrattiAss = MyBase.Columns("IdArticoliInst_ContrattiAss")
            Me.columnRiga = MyBase.Columns("Riga")
            Me.columnFlagGa = MyBase.Columns("FlagGa")
            Me.columnFlagEl = MyBase.Columns("FlagEl")
            Me.columnFlagBa = MyBase.Columns("FlagBa")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnIdEmailInviateT = New Global.System.Data.DataColumn("IdEmailInviateT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdEmailInviateT)
            Me.columnIdArticoliInst_ContrattiAss = New Global.System.Data.DataColumn("IdArticoliInst_ContrattiAss", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdArticoliInst_ContrattiAss)
            Me.columnRiga = New Global.System.Data.DataColumn("Riga", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRiga)
            Me.columnFlagGa = New Global.System.Data.DataColumn("FlagGa", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlagGa)
            Me.columnFlagEl = New Global.System.Data.DataColumn("FlagEl", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlagEl)
            Me.columnFlagBa = New Global.System.Data.DataColumn("FlagBa", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlagBa)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AutoIncrement = true
            Me.columnId.AutoIncrementSeed = -1
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = false
            Me.columnId.ReadOnly = true
            Me.columnId.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewEmailInviateDettRow() As EmailInviateDettRow
            Return CType(Me.NewRow,EmailInviateDettRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New EmailInviateDettRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(EmailInviateDettRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.EmailInviateDettRowChangedEvent) Is Nothing) Then
                RaiseEvent EmailInviateDettRowChanged(Me, New EmailInviateDettRowChangeEvent(CType(e.Row,EmailInviateDettRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.EmailInviateDettRowChangingEvent) Is Nothing) Then
                RaiseEvent EmailInviateDettRowChanging(Me, New EmailInviateDettRowChangeEvent(CType(e.Row,EmailInviateDettRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.EmailInviateDettRowDeletedEvent) Is Nothing) Then
                RaiseEvent EmailInviateDettRowDeleted(Me, New EmailInviateDettRowChangeEvent(CType(e.Row,EmailInviateDettRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.EmailInviateDettRowDeletingEvent) Is Nothing) Then
                RaiseEvent EmailInviateDettRowDeleting(Me, New EmailInviateDettRowChangeEvent(CType(e.Row,EmailInviateDettRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveEmailInviateDettRow(ByVal row As EmailInviateDettRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DsMailDaInviare = New DsMailDaInviare
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "EmailInviateDettDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ArticoliInstallatiDataTable
        Inherits Global.System.Data.TypedTableBase(Of ArticoliInstallatiRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnTipo_Doc As Global.System.Data.DataColumn
        
        Private columnData_Installazione As Global.System.Data.DataColumn
        
        Private columnCod_Coge As Global.System.Data.DataColumn
        
        Private columnRiferimento As Global.System.Data.DataColumn
        
        Private columnNoteDocumento As Global.System.Data.DataColumn
        
        Private columnNsRiferimento As Global.System.Data.DataColumn
        
        Private columnNote As Global.System.Data.DataColumn
        
        Private columnCod_Filiale As Global.System.Data.DataColumn
        
        Private columnDestinazione1 As Global.System.Data.DataColumn
        
        Private columnDestinazione2 As Global.System.Data.DataColumn
        
        Private columnDestinazione3 As Global.System.Data.DataColumn
        
        Private columnCod_Articolo As Global.System.Data.DataColumn
        
        Private columnLBase As Global.System.Data.DataColumn
        
        Private columnLOpz As Global.System.Data.DataColumn
        
        Private columnDescrizione As Global.System.Data.DataColumn
        
        Private columnDataScadGaranzia As Global.System.Data.DataColumn
        
        Private columnDataScadElettrodi As Global.System.Data.DataColumn
        
        Private columnDataScadBatterie As Global.System.Data.DataColumn
        
        Private columnData1InvioScadGa As Global.System.Data.DataColumn
        
        Private columnData1InvioScadEl As Global.System.Data.DataColumn
        
        Private columnData1InvioScadBa As Global.System.Data.DataColumn
        
        Private columnNSerie As Global.System.Data.DataColumn
        
        Private columnLotto As Global.System.Data.DataColumn
        
        Private columnAttivo As Global.System.Data.DataColumn
        
        Private columnInRiparazione As Global.System.Data.DataColumn
        
        Private columnSostituito As Global.System.Data.DataColumn
        
        Private columnDataSostituzione As Global.System.Data.DataColumn
        
        Private columnIDTipoContratto As Global.System.Data.DataColumn
        
        Private columnNumero As Global.System.Data.DataColumn
        
        Private columnImporto As Global.System.Data.DataColumn
        
        Private columnData_Inizio As Global.System.Data.DataColumn
        
        Private columnData_Fine As Global.System.Data.DataColumn
        
        Private columnRefInt As Global.System.Data.DataColumn
        
        Private columnDesRefInt As Global.System.Data.DataColumn
        
        Private columnReparto As Global.System.Data.DataColumn
        
        Private columnIDDocDTMM As Global.System.Data.DataColumn
        
        Private columnTipo_DocDTMM As Global.System.Data.DataColumn
        
        Private columnData_DocDTMM As Global.System.Data.DataColumn
        
        Private columnRigaDTMM As Global.System.Data.DataColumn
        
        Private columnNColloDTMM As Global.System.Data.DataColumn
        
        Private columnQtaColliDTMM As Global.System.Data.DataColumn
        
        Private columnSfusiDTMM As Global.System.Data.DataColumn
        
        Private columnOperatore As Global.System.Data.DataColumn
        
        Private columnNomePC As Global.System.Data.DataColumn
        
        Private columnBloccatoDalPC As Global.System.Data.DataColumn
        
        Private columnInseritoDa As Global.System.Data.DataColumn
        
        Private columnModificatoDa As Global.System.Data.DataColumn
        
        Private columnRag_Soc As Global.System.Data.DataColumn
        
        Private columnDenominazione As Global.System.Data.DataColumn
        
        Private columnPartita_IVA As Global.System.Data.DataColumn
        
        Private columnCodice_Fiscale As Global.System.Data.DataColumn
        
        Private columnLocalita As Global.System.Data.DataColumn
        
        Private columnProvincia As Global.System.Data.DataColumn
        
        Private columnCAP As Global.System.Data.DataColumn
        
        Private columnTelefono1 As Global.System.Data.DataColumn
        
        Private columnTelefono2 As Global.System.Data.DataColumn
        
        Private columnFax As Global.System.Data.DataColumn
        
        Private columnRiferimentiRic As Global.System.Data.DataColumn
        
        Private columnDescrizioneContratto As Global.System.Data.DataColumn
        
        Private columnAziendaReport As Global.System.Data.DataColumn
        
        Private columnTitoloReport As Global.System.Data.DataColumn
        
        Private columnTipoOrdinamento As Global.System.Data.DataColumn
        
        Private columnDataScadenza As Global.System.Data.DataColumn
        
        Private columnData2InvioScadGa As Global.System.Data.DataColumn
        
        Private columnData2InvioScadEl As Global.System.Data.DataColumn
        
        Private columnData2InvioScadBa As Global.System.Data.DataColumn
        
        Private columnEmailCliente As Global.System.Data.DataColumn
        
        Private columnEmailDest As Global.System.Data.DataColumn
        
        Private columnEmailCliInvioScad As Global.System.Data.DataColumn
        
        Private columnEmailInvio As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ArticoliInstallati"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tipo_DocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipo_Doc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Data_InstallazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnData_Installazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Cod_CogeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCod_Coge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RiferimentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRiferimento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NoteDocumentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoteDocumento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NsRiferimentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNsRiferimento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Cod_FilialeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCod_Filiale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Destinazione1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDestinazione1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Destinazione2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDestinazione2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Destinazione3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDestinazione3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Cod_ArticoloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCod_Articolo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LBaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLBase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LOpzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOpz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DataScadGaranziaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataScadGaranzia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DataScadElettrodiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataScadElettrodi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DataScadBatterieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataScadBatterie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Data1InvioScadGaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnData1InvioScadGa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Data1InvioScadElColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnData1InvioScadEl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Data1InvioScadBaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnData1InvioScadBa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NSerieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNSerie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LottoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AttivoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAttivo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InRiparazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInRiparazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SostituitoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSostituito
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DataSostituzioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataSostituzione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDTipoContrattoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDTipoContratto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NumeroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumero
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ImportoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Data_InizioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnData_Inizio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Data_FineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnData_Fine
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RefIntColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRefInt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DesRefIntColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesRefInt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RepartoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReparto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDDocDTMMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDDocDTMM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tipo_DocDTMMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipo_DocDTMM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Data_DocDTMMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnData_DocDTMM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RigaDTMMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRigaDTMM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NColloDTMMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNColloDTMM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property QtaColliDTMMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQtaColliDTMM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SfusiDTMMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSfusiDTMM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OperatoreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperatore
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NomePCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNomePC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BloccatoDalPCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBloccatoDalPC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InseritoDaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInseritoDa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ModificatoDaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModificatoDa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Rag_SocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRag_Soc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DenominazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDenominazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Partita_IVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPartita_IVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Codice_FiscaleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodice_Fiscale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LocalitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocalita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProvinciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProvincia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CAPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Telefono1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTelefono1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Telefono2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTelefono2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RiferimentiRicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRiferimentiRic
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescrizioneContrattoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescrizioneContratto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AziendaReportColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAziendaReport
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TitoloReportColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitoloReport
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TipoOrdinamentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoOrdinamento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DataScadenzaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataScadenza
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Data2InvioScadGaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnData2InvioScadGa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Data2InvioScadElColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnData2InvioScadEl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Data2InvioScadBaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnData2InvioScadBa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EmailClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmailCliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EmailDestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmailDest
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EmailCliInvioScadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmailCliInvioScad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EmailInvioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmailInvio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ArticoliInstallatiRow
            Get
                Return CType(Me.Rows(index),ArticoliInstallatiRow)
            End Get
        End Property
        
        Public Event ArticoliInstallatiRowChanging As ArticoliInstallatiRowChangeEventHandler
        
        Public Event ArticoliInstallatiRowChanged As ArticoliInstallatiRowChangeEventHandler
        
        Public Event ArticoliInstallatiRowDeleting As ArticoliInstallatiRowChangeEventHandler
        
        Public Event ArticoliInstallatiRowDeleted As ArticoliInstallatiRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddArticoliInstallatiRow(ByVal row As ArticoliInstallatiRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddArticoliInstallatiRow( _
                    ByVal Tipo_Doc As String,  _
                    ByVal Data_Installazione As Date,  _
                    ByVal Cod_Coge As String,  _
                    ByVal Riferimento As String,  _
                    ByVal NoteDocumento As String,  _
                    ByVal NsRiferimento As String,  _
                    ByVal Note As String,  _
                    ByVal Cod_Filiale As Integer,  _
                    ByVal Destinazione1 As String,  _
                    ByVal Destinazione2 As String,  _
                    ByVal Destinazione3 As String,  _
                    ByVal Cod_Articolo As String,  _
                    ByVal LBase As Integer,  _
                    ByVal LOpz As Integer,  _
                    ByVal Descrizione As String,  _
                    ByVal DataScadGaranzia As Date,  _
                    ByVal DataScadElettrodi As Date,  _
                    ByVal DataScadBatterie As Date,  _
                    ByVal Data1InvioScadGa As Date,  _
                    ByVal Data1InvioScadEl As Date,  _
                    ByVal Data1InvioScadBa As Date,  _
                    ByVal NSerie As String,  _
                    ByVal Lotto As String,  _
                    ByVal Attivo As Boolean,  _
                    ByVal InRiparazione As Boolean,  _
                    ByVal Sostituito As Boolean,  _
                    ByVal DataSostituzione As Date,  _
                    ByVal IDTipoContratto As Integer,  _
                    ByVal Numero As String,  _
                    ByVal Importo As Decimal,  _
                    ByVal Data_Inizio As Date,  _
                    ByVal Data_Fine As Date,  _
                    ByVal RefInt As Integer,  _
                    ByVal DesRefInt As String,  _
                    ByVal Reparto As Integer,  _
                    ByVal IDDocDTMM As Integer,  _
                    ByVal Tipo_DocDTMM As String,  _
                    ByVal Data_DocDTMM As Date,  _
                    ByVal RigaDTMM As Integer,  _
                    ByVal NColloDTMM As Integer,  _
                    ByVal QtaColliDTMM As Integer,  _
                    ByVal SfusiDTMM As Decimal,  _
                    ByVal Operatore As String,  _
                    ByVal NomePC As String,  _
                    ByVal BloccatoDalPC As String,  _
                    ByVal InseritoDa As String,  _
                    ByVal ModificatoDa As String,  _
                    ByVal Rag_Soc As String,  _
                    ByVal Denominazione As String,  _
                    ByVal Partita_IVA As String,  _
                    ByVal Codice_Fiscale As String,  _
                    ByVal Localita As String,  _
                    ByVal Provincia As String,  _
                    ByVal CAP As String,  _
                    ByVal Telefono1 As String,  _
                    ByVal Telefono2 As String,  _
                    ByVal Fax As String,  _
                    ByVal RiferimentiRic As String,  _
                    ByVal DescrizioneContratto As String,  _
                    ByVal AziendaReport As String,  _
                    ByVal TitoloReport As String,  _
                    ByVal TipoOrdinamento As String,  _
                    ByVal DataScadenza As Date,  _
                    ByVal Data2InvioScadGa As Date,  _
                    ByVal Data2InvioScadEl As Date,  _
                    ByVal Data2InvioScadBa As Date,  _
                    ByVal EmailCliente As String,  _
                    ByVal EmailDest As String,  _
                    ByVal EmailCliInvioScad As String,  _
                    ByVal EmailInvio As String) As ArticoliInstallatiRow
            Dim rowArticoliInstallatiRow As ArticoliInstallatiRow = CType(Me.NewRow,ArticoliInstallatiRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Tipo_Doc, Data_Installazione, Cod_Coge, Riferimento, NoteDocumento, NsRiferimento, Note, Cod_Filiale, Destinazione1, Destinazione2, Destinazione3, Cod_Articolo, LBase, LOpz, Descrizione, DataScadGaranzia, DataScadElettrodi, DataScadBatterie, Data1InvioScadGa, Data1InvioScadEl, Data1InvioScadBa, NSerie, Lotto, Attivo, InRiparazione, Sostituito, DataSostituzione, IDTipoContratto, Numero, Importo, Data_Inizio, Data_Fine, RefInt, DesRefInt, Reparto, IDDocDTMM, Tipo_DocDTMM, Data_DocDTMM, RigaDTMM, NColloDTMM, QtaColliDTMM, SfusiDTMM, Operatore, NomePC, BloccatoDalPC, InseritoDa, ModificatoDa, Rag_Soc, Denominazione, Partita_IVA, Codice_Fiscale, Localita, Provincia, CAP, Telefono1, Telefono2, Fax, RiferimentiRic, DescrizioneContratto, AziendaReport, TitoloReport, TipoOrdinamento, DataScadenza, Data2InvioScadGa, Data2InvioScadEl, Data2InvioScadBa, EmailCliente, EmailDest, EmailCliInvioScad, EmailInvio}
            rowArticoliInstallatiRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowArticoliInstallatiRow)
            Return rowArticoliInstallatiRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByID(ByVal ID As Integer) As ArticoliInstallatiRow
            Return CType(Me.Rows.Find(New Object() {ID}),ArticoliInstallatiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ArticoliInstallatiDataTable = CType(MyBase.Clone,ArticoliInstallatiDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ArticoliInstallatiDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnTipo_Doc = MyBase.Columns("Tipo_Doc")
            Me.columnData_Installazione = MyBase.Columns("Data_Installazione")
            Me.columnCod_Coge = MyBase.Columns("Cod_Coge")
            Me.columnRiferimento = MyBase.Columns("Riferimento")
            Me.columnNoteDocumento = MyBase.Columns("NoteDocumento")
            Me.columnNsRiferimento = MyBase.Columns("NsRiferimento")
            Me.columnNote = MyBase.Columns("Note")
            Me.columnCod_Filiale = MyBase.Columns("Cod_Filiale")
            Me.columnDestinazione1 = MyBase.Columns("Destinazione1")
            Me.columnDestinazione2 = MyBase.Columns("Destinazione2")
            Me.columnDestinazione3 = MyBase.Columns("Destinazione3")
            Me.columnCod_Articolo = MyBase.Columns("Cod_Articolo")
            Me.columnLBase = MyBase.Columns("LBase")
            Me.columnLOpz = MyBase.Columns("LOpz")
            Me.columnDescrizione = MyBase.Columns("Descrizione")
            Me.columnDataScadGaranzia = MyBase.Columns("DataScadGaranzia")
            Me.columnDataScadElettrodi = MyBase.Columns("DataScadElettrodi")
            Me.columnDataScadBatterie = MyBase.Columns("DataScadBatterie")
            Me.columnData1InvioScadGa = MyBase.Columns("Data1InvioScadGa")
            Me.columnData1InvioScadEl = MyBase.Columns("Data1InvioScadEl")
            Me.columnData1InvioScadBa = MyBase.Columns("Data1InvioScadBa")
            Me.columnNSerie = MyBase.Columns("NSerie")
            Me.columnLotto = MyBase.Columns("Lotto")
            Me.columnAttivo = MyBase.Columns("Attivo")
            Me.columnInRiparazione = MyBase.Columns("InRiparazione")
            Me.columnSostituito = MyBase.Columns("Sostituito")
            Me.columnDataSostituzione = MyBase.Columns("DataSostituzione")
            Me.columnIDTipoContratto = MyBase.Columns("IDTipoContratto")
            Me.columnNumero = MyBase.Columns("Numero")
            Me.columnImporto = MyBase.Columns("Importo")
            Me.columnData_Inizio = MyBase.Columns("Data_Inizio")
            Me.columnData_Fine = MyBase.Columns("Data_Fine")
            Me.columnRefInt = MyBase.Columns("RefInt")
            Me.columnDesRefInt = MyBase.Columns("DesRefInt")
            Me.columnReparto = MyBase.Columns("Reparto")
            Me.columnIDDocDTMM = MyBase.Columns("IDDocDTMM")
            Me.columnTipo_DocDTMM = MyBase.Columns("Tipo_DocDTMM")
            Me.columnData_DocDTMM = MyBase.Columns("Data_DocDTMM")
            Me.columnRigaDTMM = MyBase.Columns("RigaDTMM")
            Me.columnNColloDTMM = MyBase.Columns("NColloDTMM")
            Me.columnQtaColliDTMM = MyBase.Columns("QtaColliDTMM")
            Me.columnSfusiDTMM = MyBase.Columns("SfusiDTMM")
            Me.columnOperatore = MyBase.Columns("Operatore")
            Me.columnNomePC = MyBase.Columns("NomePC")
            Me.columnBloccatoDalPC = MyBase.Columns("BloccatoDalPC")
            Me.columnInseritoDa = MyBase.Columns("InseritoDa")
            Me.columnModificatoDa = MyBase.Columns("ModificatoDa")
            Me.columnRag_Soc = MyBase.Columns("Rag_Soc")
            Me.columnDenominazione = MyBase.Columns("Denominazione")
            Me.columnPartita_IVA = MyBase.Columns("Partita_IVA")
            Me.columnCodice_Fiscale = MyBase.Columns("Codice_Fiscale")
            Me.columnLocalita = MyBase.Columns("Localita")
            Me.columnProvincia = MyBase.Columns("Provincia")
            Me.columnCAP = MyBase.Columns("CAP")
            Me.columnTelefono1 = MyBase.Columns("Telefono1")
            Me.columnTelefono2 = MyBase.Columns("Telefono2")
            Me.columnFax = MyBase.Columns("Fax")
            Me.columnRiferimentiRic = MyBase.Columns("RiferimentiRic")
            Me.columnDescrizioneContratto = MyBase.Columns("DescrizioneContratto")
            Me.columnAziendaReport = MyBase.Columns("AziendaReport")
            Me.columnTitoloReport = MyBase.Columns("TitoloReport")
            Me.columnTipoOrdinamento = MyBase.Columns("TipoOrdinamento")
            Me.columnDataScadenza = MyBase.Columns("DataScadenza")
            Me.columnData2InvioScadGa = MyBase.Columns("Data2InvioScadGa")
            Me.columnData2InvioScadEl = MyBase.Columns("Data2InvioScadEl")
            Me.columnData2InvioScadBa = MyBase.Columns("Data2InvioScadBa")
            Me.columnEmailCliente = MyBase.Columns("EmailCliente")
            Me.columnEmailDest = MyBase.Columns("EmailDest")
            Me.columnEmailCliInvioScad = MyBase.Columns("EmailCliInvioScad")
            Me.columnEmailInvio = MyBase.Columns("EmailInvio")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnTipo_Doc = New Global.System.Data.DataColumn("Tipo_Doc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipo_Doc)
            Me.columnData_Installazione = New Global.System.Data.DataColumn("Data_Installazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnData_Installazione)
            Me.columnCod_Coge = New Global.System.Data.DataColumn("Cod_Coge", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCod_Coge)
            Me.columnRiferimento = New Global.System.Data.DataColumn("Riferimento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRiferimento)
            Me.columnNoteDocumento = New Global.System.Data.DataColumn("NoteDocumento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoteDocumento)
            Me.columnNsRiferimento = New Global.System.Data.DataColumn("NsRiferimento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNsRiferimento)
            Me.columnNote = New Global.System.Data.DataColumn("Note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNote)
            Me.columnCod_Filiale = New Global.System.Data.DataColumn("Cod_Filiale", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCod_Filiale)
            Me.columnDestinazione1 = New Global.System.Data.DataColumn("Destinazione1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDestinazione1)
            Me.columnDestinazione2 = New Global.System.Data.DataColumn("Destinazione2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDestinazione2)
            Me.columnDestinazione3 = New Global.System.Data.DataColumn("Destinazione3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDestinazione3)
            Me.columnCod_Articolo = New Global.System.Data.DataColumn("Cod_Articolo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCod_Articolo)
            Me.columnLBase = New Global.System.Data.DataColumn("LBase", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLBase)
            Me.columnLOpz = New Global.System.Data.DataColumn("LOpz", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOpz)
            Me.columnDescrizione = New Global.System.Data.DataColumn("Descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescrizione)
            Me.columnDataScadGaranzia = New Global.System.Data.DataColumn("DataScadGaranzia", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataScadGaranzia)
            Me.columnDataScadElettrodi = New Global.System.Data.DataColumn("DataScadElettrodi", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataScadElettrodi)
            Me.columnDataScadBatterie = New Global.System.Data.DataColumn("DataScadBatterie", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataScadBatterie)
            Me.columnData1InvioScadGa = New Global.System.Data.DataColumn("Data1InvioScadGa", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnData1InvioScadGa)
            Me.columnData1InvioScadEl = New Global.System.Data.DataColumn("Data1InvioScadEl", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnData1InvioScadEl)
            Me.columnData1InvioScadBa = New Global.System.Data.DataColumn("Data1InvioScadBa", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnData1InvioScadBa)
            Me.columnNSerie = New Global.System.Data.DataColumn("NSerie", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNSerie)
            Me.columnLotto = New Global.System.Data.DataColumn("Lotto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotto)
            Me.columnAttivo = New Global.System.Data.DataColumn("Attivo", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAttivo)
            Me.columnInRiparazione = New Global.System.Data.DataColumn("InRiparazione", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInRiparazione)
            Me.columnSostituito = New Global.System.Data.DataColumn("Sostituito", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSostituito)
            Me.columnDataSostituzione = New Global.System.Data.DataColumn("DataSostituzione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataSostituzione)
            Me.columnIDTipoContratto = New Global.System.Data.DataColumn("IDTipoContratto", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDTipoContratto)
            Me.columnNumero = New Global.System.Data.DataColumn("Numero", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumero)
            Me.columnImporto = New Global.System.Data.DataColumn("Importo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporto)
            Me.columnData_Inizio = New Global.System.Data.DataColumn("Data_Inizio", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnData_Inizio)
            Me.columnData_Fine = New Global.System.Data.DataColumn("Data_Fine", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnData_Fine)
            Me.columnRefInt = New Global.System.Data.DataColumn("RefInt", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRefInt)
            Me.columnDesRefInt = New Global.System.Data.DataColumn("DesRefInt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesRefInt)
            Me.columnReparto = New Global.System.Data.DataColumn("Reparto", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReparto)
            Me.columnIDDocDTMM = New Global.System.Data.DataColumn("IDDocDTMM", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDDocDTMM)
            Me.columnTipo_DocDTMM = New Global.System.Data.DataColumn("Tipo_DocDTMM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipo_DocDTMM)
            Me.columnData_DocDTMM = New Global.System.Data.DataColumn("Data_DocDTMM", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnData_DocDTMM)
            Me.columnRigaDTMM = New Global.System.Data.DataColumn("RigaDTMM", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRigaDTMM)
            Me.columnNColloDTMM = New Global.System.Data.DataColumn("NColloDTMM", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNColloDTMM)
            Me.columnQtaColliDTMM = New Global.System.Data.DataColumn("QtaColliDTMM", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQtaColliDTMM)
            Me.columnSfusiDTMM = New Global.System.Data.DataColumn("SfusiDTMM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSfusiDTMM)
            Me.columnOperatore = New Global.System.Data.DataColumn("Operatore", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperatore)
            Me.columnNomePC = New Global.System.Data.DataColumn("NomePC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNomePC)
            Me.columnBloccatoDalPC = New Global.System.Data.DataColumn("BloccatoDalPC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBloccatoDalPC)
            Me.columnInseritoDa = New Global.System.Data.DataColumn("InseritoDa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInseritoDa)
            Me.columnModificatoDa = New Global.System.Data.DataColumn("ModificatoDa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModificatoDa)
            Me.columnRag_Soc = New Global.System.Data.DataColumn("Rag_Soc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRag_Soc)
            Me.columnDenominazione = New Global.System.Data.DataColumn("Denominazione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDenominazione)
            Me.columnPartita_IVA = New Global.System.Data.DataColumn("Partita_IVA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPartita_IVA)
            Me.columnCodice_Fiscale = New Global.System.Data.DataColumn("Codice_Fiscale", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodice_Fiscale)
            Me.columnLocalita = New Global.System.Data.DataColumn("Localita", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocalita)
            Me.columnProvincia = New Global.System.Data.DataColumn("Provincia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProvincia)
            Me.columnCAP = New Global.System.Data.DataColumn("CAP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAP)
            Me.columnTelefono1 = New Global.System.Data.DataColumn("Telefono1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTelefono1)
            Me.columnTelefono2 = New Global.System.Data.DataColumn("Telefono2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTelefono2)
            Me.columnFax = New Global.System.Data.DataColumn("Fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFax)
            Me.columnRiferimentiRic = New Global.System.Data.DataColumn("RiferimentiRic", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRiferimentiRic)
            Me.columnDescrizioneContratto = New Global.System.Data.DataColumn("DescrizioneContratto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescrizioneContratto)
            Me.columnAziendaReport = New Global.System.Data.DataColumn("AziendaReport", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAziendaReport)
            Me.columnTitoloReport = New Global.System.Data.DataColumn("TitoloReport", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitoloReport)
            Me.columnTipoOrdinamento = New Global.System.Data.DataColumn("TipoOrdinamento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoOrdinamento)
            Me.columnDataScadenza = New Global.System.Data.DataColumn("DataScadenza", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataScadenza)
            Me.columnData2InvioScadGa = New Global.System.Data.DataColumn("Data2InvioScadGa", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnData2InvioScadGa)
            Me.columnData2InvioScadEl = New Global.System.Data.DataColumn("Data2InvioScadEl", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnData2InvioScadEl)
            Me.columnData2InvioScadBa = New Global.System.Data.DataColumn("Data2InvioScadBa", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnData2InvioScadBa)
            Me.columnEmailCliente = New Global.System.Data.DataColumn("EmailCliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmailCliente)
            Me.columnEmailDest = New Global.System.Data.DataColumn("EmailDest", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmailDest)
            Me.columnEmailCliInvioScad = New Global.System.Data.DataColumn("EmailCliInvioScad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmailCliInvioScad)
            Me.columnEmailInvio = New Global.System.Data.DataColumn("EmailInvio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmailInvio)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("ArticoliInstallatiKey1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnTipo_Doc.MaxLength = 2
            Me.columnCod_Coge.MaxLength = 16
            Me.columnDestinazione1.MaxLength = 150
            Me.columnDestinazione2.MaxLength = 150
            Me.columnDestinazione3.MaxLength = 150
            Me.columnCod_Articolo.MaxLength = 20
            Me.columnDescrizione.MaxLength = 150
            Me.columnNSerie.MaxLength = 16
            Me.columnLotto.MaxLength = 16
            Me.columnInRiparazione.AllowDBNull = false
            Me.columnSostituito.AllowDBNull = false
            Me.columnNumero.MaxLength = 10
            Me.columnDesRefInt.MaxLength = 1073741823
            Me.columnTipo_DocDTMM.MaxLength = 2
            Me.columnOperatore.MaxLength = 50
            Me.columnNomePC.MaxLength = 50
            Me.columnBloccatoDalPC.MaxLength = 50
            Me.columnInseritoDa.MaxLength = 50
            Me.columnModificatoDa.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewArticoliInstallatiRow() As ArticoliInstallatiRow
            Return CType(Me.NewRow,ArticoliInstallatiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ArticoliInstallatiRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ArticoliInstallatiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ArticoliInstallatiRowChangedEvent) Is Nothing) Then
                RaiseEvent ArticoliInstallatiRowChanged(Me, New ArticoliInstallatiRowChangeEvent(CType(e.Row,ArticoliInstallatiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ArticoliInstallatiRowChangingEvent) Is Nothing) Then
                RaiseEvent ArticoliInstallatiRowChanging(Me, New ArticoliInstallatiRowChangeEvent(CType(e.Row,ArticoliInstallatiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ArticoliInstallatiRowDeletedEvent) Is Nothing) Then
                RaiseEvent ArticoliInstallatiRowDeleted(Me, New ArticoliInstallatiRowChangeEvent(CType(e.Row,ArticoliInstallatiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ArticoliInstallatiRowDeletingEvent) Is Nothing) Then
                RaiseEvent ArticoliInstallatiRowDeleting(Me, New ArticoliInstallatiRowChangeEvent(CType(e.Row,ArticoliInstallatiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveArticoliInstallatiRow(ByVal row As ArticoliInstallatiRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DsMailDaInviare = New DsMailDaInviare
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ArticoliInstallatiDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class EmailInviateTRow
        Inherits Global.System.Data.DataRow
        
        Private tableEmailInviateT As EmailInviateTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEmailInviateT = CType(Me.Table,EmailInviateTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tableEmailInviateT.IdColumn),Integer)
            End Get
            Set
                Me(Me.tableEmailInviateT.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Numero() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEmailInviateT.NumeroColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Numero' nella tabella 'EmailInviateT' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEmailInviateT.NumeroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Anno() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEmailInviateT.AnnoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Anno' nella tabella 'EmailInviateT' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEmailInviateT.AnnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Stato() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEmailInviateT.StatoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Stato' nella tabella 'EmailInviateT' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEmailInviateT.StatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DataInvio() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEmailInviateT.DataInvioColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'DataInvio' nella tabella 'EmailInviateT' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEmailInviateT.DataInvioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Email() As String
            Get
                Try 
                    Return CType(Me(Me.tableEmailInviateT.EmailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Email' nella tabella 'EmailInviateT' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEmailInviateT.EmailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Note() As String
            Get
                Try 
                    Return CType(Me(Me.tableEmailInviateT.NoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Note' nella tabella 'EmailInviateT' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEmailInviateT.NoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IdModulo1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEmailInviateT.IdModulo1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'IdModulo1' nella tabella 'EmailInviateT' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEmailInviateT.IdModulo1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IdModulo2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEmailInviateT.IdModulo2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'IdModulo2' nella tabella 'EmailInviateT' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEmailInviateT.IdModulo2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IdModulo3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEmailInviateT.IdModulo3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'IdModulo3' nella tabella 'EmailInviateT' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEmailInviateT.IdModulo3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IdModulo4() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEmailInviateT.IdModulo4Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'IdModulo4' nella tabella 'EmailInviateT' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEmailInviateT.IdModulo4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Mittente() As String
            Get
                Try 
                    Return CType(Me(Me.tableEmailInviateT.MittenteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Mittente' nella tabella 'EmailInviateT' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEmailInviateT.MittenteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNumeroNull() As Boolean
            Return Me.IsNull(Me.tableEmailInviateT.NumeroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNumeroNull()
            Me(Me.tableEmailInviateT.NumeroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAnnoNull() As Boolean
            Return Me.IsNull(Me.tableEmailInviateT.AnnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAnnoNull()
            Me(Me.tableEmailInviateT.AnnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStatoNull() As Boolean
            Return Me.IsNull(Me.tableEmailInviateT.StatoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStatoNull()
            Me(Me.tableEmailInviateT.StatoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDataInvioNull() As Boolean
            Return Me.IsNull(Me.tableEmailInviateT.DataInvioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDataInvioNull()
            Me(Me.tableEmailInviateT.DataInvioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEmailNull() As Boolean
            Return Me.IsNull(Me.tableEmailInviateT.EmailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEmailNull()
            Me(Me.tableEmailInviateT.EmailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNoteNull() As Boolean
            Return Me.IsNull(Me.tableEmailInviateT.NoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNoteNull()
            Me(Me.tableEmailInviateT.NoteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIdModulo1Null() As Boolean
            Return Me.IsNull(Me.tableEmailInviateT.IdModulo1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIdModulo1Null()
            Me(Me.tableEmailInviateT.IdModulo1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIdModulo2Null() As Boolean
            Return Me.IsNull(Me.tableEmailInviateT.IdModulo2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIdModulo2Null()
            Me(Me.tableEmailInviateT.IdModulo2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIdModulo3Null() As Boolean
            Return Me.IsNull(Me.tableEmailInviateT.IdModulo3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIdModulo3Null()
            Me(Me.tableEmailInviateT.IdModulo3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIdModulo4Null() As Boolean
            Return Me.IsNull(Me.tableEmailInviateT.IdModulo4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIdModulo4Null()
            Me(Me.tableEmailInviateT.IdModulo4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMittenteNull() As Boolean
            Return Me.IsNull(Me.tableEmailInviateT.MittenteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMittenteNull()
            Me(Me.tableEmailInviateT.MittenteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetEmailInviateDettRows() As EmailInviateDettRow()
            If (Me.Table.ChildRelations("EmailInviateT_EmailInviateDett") Is Nothing) Then
                Return New EmailInviateDettRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("EmailInviateT_EmailInviateDett")),EmailInviateDettRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class EmailInviateDettRow
        Inherits Global.System.Data.DataRow
        
        Private tableEmailInviateDett As EmailInviateDettDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEmailInviateDett = CType(Me.Table,EmailInviateDettDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tableEmailInviateDett.IdColumn),Integer)
            End Get
            Set
                Me(Me.tableEmailInviateDett.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IdEmailInviateT() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEmailInviateDett.IdEmailInviateTColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'IdEmailInviateT' nella tabella 'EmailInviateDett' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableEmailInviateDett.IdEmailInviateTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IdArticoliInst_ContrattiAss() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEmailInviateDett.IdArticoliInst_ContrattiAssColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'IdArticoliInst_ContrattiAss' nella tabella 'EmailInviate"& _ 
                            "Dett' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEmailInviateDett.IdArticoliInst_ContrattiAssColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Riga() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEmailInviateDett.RigaColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Riga' nella tabella 'EmailInviateDett' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEmailInviateDett.RigaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FlagGa() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableEmailInviateDett.FlagGaColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'FlagGa' nella tabella 'EmailInviateDett' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEmailInviateDett.FlagGaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FlagEl() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableEmailInviateDett.FlagElColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'FlagEl' nella tabella 'EmailInviateDett' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEmailInviateDett.FlagElColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FlagBa() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableEmailInviateDett.FlagBaColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'FlagBa' nella tabella 'EmailInviateDett' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEmailInviateDett.FlagBaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EmailInviateTRow() As EmailInviateTRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("EmailInviateT_EmailInviateDett")),EmailInviateTRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("EmailInviateT_EmailInviateDett"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIdEmailInviateTNull() As Boolean
            Return Me.IsNull(Me.tableEmailInviateDett.IdEmailInviateTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIdEmailInviateTNull()
            Me(Me.tableEmailInviateDett.IdEmailInviateTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIdArticoliInst_ContrattiAssNull() As Boolean
            Return Me.IsNull(Me.tableEmailInviateDett.IdArticoliInst_ContrattiAssColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIdArticoliInst_ContrattiAssNull()
            Me(Me.tableEmailInviateDett.IdArticoliInst_ContrattiAssColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRigaNull() As Boolean
            Return Me.IsNull(Me.tableEmailInviateDett.RigaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRigaNull()
            Me(Me.tableEmailInviateDett.RigaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFlagGaNull() As Boolean
            Return Me.IsNull(Me.tableEmailInviateDett.FlagGaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFlagGaNull()
            Me(Me.tableEmailInviateDett.FlagGaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFlagElNull() As Boolean
            Return Me.IsNull(Me.tableEmailInviateDett.FlagElColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFlagElNull()
            Me(Me.tableEmailInviateDett.FlagElColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFlagBaNull() As Boolean
            Return Me.IsNull(Me.tableEmailInviateDett.FlagBaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFlagBaNull()
            Me(Me.tableEmailInviateDett.FlagBaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ArticoliInstallatiRow
        Inherits Global.System.Data.DataRow
        
        Private tableArticoliInstallati As ArticoliInstallatiDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableArticoliInstallati = CType(Me.Table,ArticoliInstallatiDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableArticoliInstallati.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableArticoliInstallati.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tipo_Doc() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Tipo_DocColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Tipo_Doc' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Tipo_DocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Data_Installazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Data_InstallazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Data_Installazione' nella tabella 'ArticoliInstallati' è"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Data_InstallazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cod_Coge() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Cod_CogeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Cod_Coge' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Cod_CogeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Riferimento() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.RiferimentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Riferimento' nella tabella 'ArticoliInstallati' è DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.RiferimentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NoteDocumento() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.NoteDocumentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'NoteDocumento' nella tabella 'ArticoliInstallati' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.NoteDocumentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NsRiferimento() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.NsRiferimentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'NsRiferimento' nella tabella 'ArticoliInstallati' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.NsRiferimentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Note() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.NoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Note' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.NoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cod_Filiale() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Cod_FilialeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Cod_Filiale' nella tabella 'ArticoliInstallati' è DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Cod_FilialeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Destinazione1() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Destinazione1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Destinazione1' nella tabella 'ArticoliInstallati' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Destinazione1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Destinazione2() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Destinazione2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Destinazione2' nella tabella 'ArticoliInstallati' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Destinazione2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Destinazione3() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Destinazione3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Destinazione3' nella tabella 'ArticoliInstallati' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Destinazione3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cod_Articolo() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Cod_ArticoloColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Cod_Articolo' nella tabella 'ArticoliInstallati' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Cod_ArticoloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LBase() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.LBaseColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'LBase' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.LBaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LOpz() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.LOpzColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'LOpz' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.LOpzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.DescrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Descrizione' nella tabella 'ArticoliInstallati' è DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.DescrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DataScadGaranzia() As Date
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.DataScadGaranziaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'DataScadGaranzia' nella tabella 'ArticoliInstallati' è D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.DataScadGaranziaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DataScadElettrodi() As Date
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.DataScadElettrodiColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'DataScadElettrodi' nella tabella 'ArticoliInstallati' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.DataScadElettrodiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DataScadBatterie() As Date
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.DataScadBatterieColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'DataScadBatterie' nella tabella 'ArticoliInstallati' è D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.DataScadBatterieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Data1InvioScadGa() As Date
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Data1InvioScadGaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Data1InvioScadGa' nella tabella 'ArticoliInstallati' è D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Data1InvioScadGaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Data1InvioScadEl() As Date
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Data1InvioScadElColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Data1InvioScadEl' nella tabella 'ArticoliInstallati' è D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Data1InvioScadElColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Data1InvioScadBa() As Date
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Data1InvioScadBaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Data1InvioScadBa' nella tabella 'ArticoliInstallati' è D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Data1InvioScadBaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NSerie() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.NSerieColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'NSerie' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.NSerieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Lotto() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.LottoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Lotto' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.LottoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Attivo() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.AttivoColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Attivo' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.AttivoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InRiparazione() As Boolean
            Get
                Return CType(Me(Me.tableArticoliInstallati.InRiparazioneColumn),Boolean)
            End Get
            Set
                Me(Me.tableArticoliInstallati.InRiparazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sostituito() As Boolean
            Get
                Return CType(Me(Me.tableArticoliInstallati.SostituitoColumn),Boolean)
            End Get
            Set
                Me(Me.tableArticoliInstallati.SostituitoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DataSostituzione() As Date
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.DataSostituzioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'DataSostituzione' nella tabella 'ArticoliInstallati' è D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.DataSostituzioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDTipoContratto() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.IDTipoContrattoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'IDTipoContratto' nella tabella 'ArticoliInstallati' è DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.IDTipoContrattoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Numero() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.NumeroColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Numero' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.NumeroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Importo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.ImportoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Importo' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.ImportoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Data_Inizio() As Date
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Data_InizioColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Data_Inizio' nella tabella 'ArticoliInstallati' è DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Data_InizioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Data_Fine() As Date
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Data_FineColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Data_Fine' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Data_FineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RefInt() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.RefIntColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'RefInt' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.RefIntColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DesRefInt() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.DesRefIntColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'DesRefInt' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.DesRefIntColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Reparto() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.RepartoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Reparto' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.RepartoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDDocDTMM() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.IDDocDTMMColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'IDDocDTMM' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.IDDocDTMMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tipo_DocDTMM() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Tipo_DocDTMMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Tipo_DocDTMM' nella tabella 'ArticoliInstallati' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Tipo_DocDTMMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Data_DocDTMM() As Date
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Data_DocDTMMColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Data_DocDTMM' nella tabella 'ArticoliInstallati' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Data_DocDTMMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RigaDTMM() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.RigaDTMMColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'RigaDTMM' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.RigaDTMMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NColloDTMM() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.NColloDTMMColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'NColloDTMM' nella tabella 'ArticoliInstallati' è DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.NColloDTMMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property QtaColliDTMM() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.QtaColliDTMMColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'QtaColliDTMM' nella tabella 'ArticoliInstallati' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.QtaColliDTMMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SfusiDTMM() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.SfusiDTMMColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'SfusiDTMM' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.SfusiDTMMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Operatore() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.OperatoreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Operatore' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.OperatoreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NomePC() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.NomePCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'NomePC' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.NomePCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BloccatoDalPC() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.BloccatoDalPCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'BloccatoDalPC' nella tabella 'ArticoliInstallati' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.BloccatoDalPCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InseritoDa() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.InseritoDaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'InseritoDa' nella tabella 'ArticoliInstallati' è DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.InseritoDaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ModificatoDa() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.ModificatoDaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'ModificatoDa' nella tabella 'ArticoliInstallati' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.ModificatoDaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Rag_Soc() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Rag_SocColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Rag_Soc' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Rag_SocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Denominazione() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.DenominazioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Denominazione' nella tabella 'ArticoliInstallati' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.DenominazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Partita_IVA() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Partita_IVAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Partita_IVA' nella tabella 'ArticoliInstallati' è DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Partita_IVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Codice_Fiscale() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Codice_FiscaleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Codice_Fiscale' nella tabella 'ArticoliInstallati' è DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Codice_FiscaleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Localita() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.LocalitaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Localita' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.LocalitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Provincia() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.ProvinciaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Provincia' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.ProvinciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CAP() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.CAPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'CAP' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.CAPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Telefono1() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Telefono1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Telefono1' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Telefono1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Telefono2() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Telefono2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Telefono2' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Telefono2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Fax() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.FaxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Fax' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.FaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RiferimentiRic() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.RiferimentiRicColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'RiferimentiRic' nella tabella 'ArticoliInstallati' è DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.RiferimentiRicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DescrizioneContratto() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.DescrizioneContrattoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'DescrizioneContratto' nella tabella 'ArticoliInstallati'"& _ 
                            " è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.DescrizioneContrattoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AziendaReport() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.AziendaReportColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'AziendaReport' nella tabella 'ArticoliInstallati' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.AziendaReportColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TitoloReport() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.TitoloReportColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'TitoloReport' nella tabella 'ArticoliInstallati' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.TitoloReportColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TipoOrdinamento() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.TipoOrdinamentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'TipoOrdinamento' nella tabella 'ArticoliInstallati' è DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.TipoOrdinamentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DataScadenza() As Date
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.DataScadenzaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'DataScadenza' nella tabella 'ArticoliInstallati' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.DataScadenzaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Data2InvioScadGa() As Date
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Data2InvioScadGaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Data2InvioScadGa' nella tabella 'ArticoliInstallati' è D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Data2InvioScadGaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Data2InvioScadEl() As Date
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Data2InvioScadElColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Data2InvioScadEl' nella tabella 'ArticoliInstallati' è D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Data2InvioScadElColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Data2InvioScadBa() As Date
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.Data2InvioScadBaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Data2InvioScadBa' nella tabella 'ArticoliInstallati' è D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.Data2InvioScadBaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EmailCliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.EmailClienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'EmailCliente' nella tabella 'ArticoliInstallati' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.EmailClienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EmailDest() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.EmailDestColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'EmailDest' nella tabella 'ArticoliInstallati' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.EmailDestColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EmailCliInvioScad() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.EmailCliInvioScadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'EmailCliInvioScad' nella tabella 'ArticoliInstallati' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.EmailCliInvioScadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EmailInvio() As String
            Get
                Try 
                    Return CType(Me(Me.tableArticoliInstallati.EmailInvioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'EmailInvio' nella tabella 'ArticoliInstallati' è DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableArticoliInstallati.EmailInvioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTipo_DocNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Tipo_DocColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTipo_DocNull()
            Me(Me.tableArticoliInstallati.Tipo_DocColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsData_InstallazioneNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Data_InstallazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetData_InstallazioneNull()
            Me(Me.tableArticoliInstallati.Data_InstallazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCod_CogeNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Cod_CogeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCod_CogeNull()
            Me(Me.tableArticoliInstallati.Cod_CogeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRiferimentoNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.RiferimentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRiferimentoNull()
            Me(Me.tableArticoliInstallati.RiferimentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNoteDocumentoNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.NoteDocumentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNoteDocumentoNull()
            Me(Me.tableArticoliInstallati.NoteDocumentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNsRiferimentoNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.NsRiferimentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNsRiferimentoNull()
            Me(Me.tableArticoliInstallati.NsRiferimentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNoteNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.NoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNoteNull()
            Me(Me.tableArticoliInstallati.NoteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCod_FilialeNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Cod_FilialeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCod_FilialeNull()
            Me(Me.tableArticoliInstallati.Cod_FilialeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDestinazione1Null() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Destinazione1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDestinazione1Null()
            Me(Me.tableArticoliInstallati.Destinazione1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDestinazione2Null() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Destinazione2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDestinazione2Null()
            Me(Me.tableArticoliInstallati.Destinazione2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDestinazione3Null() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Destinazione3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDestinazione3Null()
            Me(Me.tableArticoliInstallati.Destinazione3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCod_ArticoloNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Cod_ArticoloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCod_ArticoloNull()
            Me(Me.tableArticoliInstallati.Cod_ArticoloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLBaseNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.LBaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLBaseNull()
            Me(Me.tableArticoliInstallati.LBaseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLOpzNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.LOpzColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLOpzNull()
            Me(Me.tableArticoliInstallati.LOpzColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescrizioneNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.DescrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescrizioneNull()
            Me(Me.tableArticoliInstallati.DescrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDataScadGaranziaNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.DataScadGaranziaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDataScadGaranziaNull()
            Me(Me.tableArticoliInstallati.DataScadGaranziaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDataScadElettrodiNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.DataScadElettrodiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDataScadElettrodiNull()
            Me(Me.tableArticoliInstallati.DataScadElettrodiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDataScadBatterieNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.DataScadBatterieColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDataScadBatterieNull()
            Me(Me.tableArticoliInstallati.DataScadBatterieColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsData1InvioScadGaNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Data1InvioScadGaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetData1InvioScadGaNull()
            Me(Me.tableArticoliInstallati.Data1InvioScadGaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsData1InvioScadElNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Data1InvioScadElColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetData1InvioScadElNull()
            Me(Me.tableArticoliInstallati.Data1InvioScadElColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsData1InvioScadBaNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Data1InvioScadBaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetData1InvioScadBaNull()
            Me(Me.tableArticoliInstallati.Data1InvioScadBaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNSerieNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.NSerieColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNSerieNull()
            Me(Me.tableArticoliInstallati.NSerieColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLottoNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.LottoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLottoNull()
            Me(Me.tableArticoliInstallati.LottoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAttivoNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.AttivoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAttivoNull()
            Me(Me.tableArticoliInstallati.AttivoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDataSostituzioneNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.DataSostituzioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDataSostituzioneNull()
            Me(Me.tableArticoliInstallati.DataSostituzioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIDTipoContrattoNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.IDTipoContrattoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIDTipoContrattoNull()
            Me(Me.tableArticoliInstallati.IDTipoContrattoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNumeroNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.NumeroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNumeroNull()
            Me(Me.tableArticoliInstallati.NumeroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsImportoNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.ImportoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetImportoNull()
            Me(Me.tableArticoliInstallati.ImportoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsData_InizioNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Data_InizioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetData_InizioNull()
            Me(Me.tableArticoliInstallati.Data_InizioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsData_FineNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Data_FineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetData_FineNull()
            Me(Me.tableArticoliInstallati.Data_FineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRefIntNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.RefIntColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRefIntNull()
            Me(Me.tableArticoliInstallati.RefIntColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDesRefIntNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.DesRefIntColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDesRefIntNull()
            Me(Me.tableArticoliInstallati.DesRefIntColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRepartoNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.RepartoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRepartoNull()
            Me(Me.tableArticoliInstallati.RepartoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIDDocDTMMNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.IDDocDTMMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIDDocDTMMNull()
            Me(Me.tableArticoliInstallati.IDDocDTMMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTipo_DocDTMMNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Tipo_DocDTMMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTipo_DocDTMMNull()
            Me(Me.tableArticoliInstallati.Tipo_DocDTMMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsData_DocDTMMNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Data_DocDTMMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetData_DocDTMMNull()
            Me(Me.tableArticoliInstallati.Data_DocDTMMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRigaDTMMNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.RigaDTMMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRigaDTMMNull()
            Me(Me.tableArticoliInstallati.RigaDTMMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNColloDTMMNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.NColloDTMMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNColloDTMMNull()
            Me(Me.tableArticoliInstallati.NColloDTMMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsQtaColliDTMMNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.QtaColliDTMMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetQtaColliDTMMNull()
            Me(Me.tableArticoliInstallati.QtaColliDTMMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSfusiDTMMNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.SfusiDTMMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSfusiDTMMNull()
            Me(Me.tableArticoliInstallati.SfusiDTMMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOperatoreNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.OperatoreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOperatoreNull()
            Me(Me.tableArticoliInstallati.OperatoreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNomePCNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.NomePCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNomePCNull()
            Me(Me.tableArticoliInstallati.NomePCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBloccatoDalPCNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.BloccatoDalPCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBloccatoDalPCNull()
            Me(Me.tableArticoliInstallati.BloccatoDalPCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInseritoDaNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.InseritoDaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInseritoDaNull()
            Me(Me.tableArticoliInstallati.InseritoDaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsModificatoDaNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.ModificatoDaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetModificatoDaNull()
            Me(Me.tableArticoliInstallati.ModificatoDaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRag_SocNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Rag_SocColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRag_SocNull()
            Me(Me.tableArticoliInstallati.Rag_SocColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDenominazioneNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.DenominazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDenominazioneNull()
            Me(Me.tableArticoliInstallati.DenominazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPartita_IVANull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Partita_IVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPartita_IVANull()
            Me(Me.tableArticoliInstallati.Partita_IVAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodice_FiscaleNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Codice_FiscaleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodice_FiscaleNull()
            Me(Me.tableArticoliInstallati.Codice_FiscaleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLocalitaNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.LocalitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLocalitaNull()
            Me(Me.tableArticoliInstallati.LocalitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProvinciaNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.ProvinciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProvinciaNull()
            Me(Me.tableArticoliInstallati.ProvinciaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCAPNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.CAPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCAPNull()
            Me(Me.tableArticoliInstallati.CAPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTelefono1Null() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Telefono1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTelefono1Null()
            Me(Me.tableArticoliInstallati.Telefono1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTelefono2Null() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Telefono2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTelefono2Null()
            Me(Me.tableArticoliInstallati.Telefono2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFaxNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.FaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFaxNull()
            Me(Me.tableArticoliInstallati.FaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRiferimentiRicNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.RiferimentiRicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRiferimentiRicNull()
            Me(Me.tableArticoliInstallati.RiferimentiRicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescrizioneContrattoNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.DescrizioneContrattoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescrizioneContrattoNull()
            Me(Me.tableArticoliInstallati.DescrizioneContrattoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAziendaReportNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.AziendaReportColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAziendaReportNull()
            Me(Me.tableArticoliInstallati.AziendaReportColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTitoloReportNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.TitoloReportColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTitoloReportNull()
            Me(Me.tableArticoliInstallati.TitoloReportColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTipoOrdinamentoNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.TipoOrdinamentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTipoOrdinamentoNull()
            Me(Me.tableArticoliInstallati.TipoOrdinamentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDataScadenzaNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.DataScadenzaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDataScadenzaNull()
            Me(Me.tableArticoliInstallati.DataScadenzaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsData2InvioScadGaNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Data2InvioScadGaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetData2InvioScadGaNull()
            Me(Me.tableArticoliInstallati.Data2InvioScadGaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsData2InvioScadElNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Data2InvioScadElColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetData2InvioScadElNull()
            Me(Me.tableArticoliInstallati.Data2InvioScadElColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsData2InvioScadBaNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.Data2InvioScadBaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetData2InvioScadBaNull()
            Me(Me.tableArticoliInstallati.Data2InvioScadBaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEmailClienteNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.EmailClienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEmailClienteNull()
            Me(Me.tableArticoliInstallati.EmailClienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEmailDestNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.EmailDestColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEmailDestNull()
            Me(Me.tableArticoliInstallati.EmailDestColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEmailCliInvioScadNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.EmailCliInvioScadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEmailCliInvioScadNull()
            Me(Me.tableArticoliInstallati.EmailCliInvioScadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEmailInvioNull() As Boolean
            Return Me.IsNull(Me.tableArticoliInstallati.EmailInvioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEmailInvioNull()
            Me(Me.tableArticoliInstallati.EmailInvioColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class EmailInviateTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As EmailInviateTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As EmailInviateTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As EmailInviateTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class EmailInviateDettRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As EmailInviateDettRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As EmailInviateDettRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As EmailInviateDettRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ArticoliInstallatiRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ArticoliInstallatiRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ArticoliInstallatiRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ArticoliInstallatiRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
